function* nats() {
  let n = 0;
  while (true) {
    yield n;
    n++;
  }
}

function* even(iterable) {
  for (const n of iterable) {
    if (n % 2 === 0) {
      yield n;
    }
  }
}

function* evenGreaterThanTen(iterable) {
  for (const n of iterable) {
    if (n > 10) {
      yield n;
    }
  }
}

function* cut(iterable, n) {
  let count = 0;
  for (const value of iterable) {
    if (count >= n) {
      break;
    }
    yield value;
    count++;
  }
}

function saveIterable(iterable) {
  for (const n of iterable) {
    listaE.push(n);
  }
}
const listaE = [];

const natsIterable = nats();
const evenIterable = even(natsIterable);
const evenGreaterThanTenIterable = evenGreaterThanTen(evenIterable);
const onlyFiveAfterTenIterable = cut(evenGreaterThanTenIterable, 5);
saveIterable(onlyFiveAfterTenIterable);
listaE;